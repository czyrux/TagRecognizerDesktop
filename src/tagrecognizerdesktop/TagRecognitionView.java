/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TagRecognitionView.java
 *
 * Created on Jul 15, 2012, 6:17:33 PM
 */
package tagrecognizerdesktop;

import de.unidue.tagrecognition.Message;
import de.unidue.tagrecognition.Tag;
import de.unidue.tagrecognition.TagContainer;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.ImageIcon;

/**
 *
 * @author czyrux
 */
public class TagRecognitionView extends javax.swing.JPanel {

    /** Creates new form TagRecognitionView */
    public TagRecognitionView() {
        initComponents();
        
        initialStateButtons();
        
        _followedTags = new HashMap();
        _followedTags.put("12321232", new TagContainer(Color.BLUE));
        //_followedTags.put("13221113", new TagContainer(Color.BLUE));
        
        _viewActive = false;
        jTabbedPane1.setEnabledAt(0, false);
        //Initialize server
        _server = new ServerThread(this);
        Thread sf = new Thread(_server);
        sf.start();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jPanel_controls = new javax.swing.JPanel();
        jButton_calibrate = new javax.swing.JButton();
        jButton_start = new javax.swing.JButton();
        jButton_stop = new javax.swing.JButton();
        jButton_receiveImage = new javax.swing.JButton();
        jLabel_androidControls = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jLabel_image = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel_log = new javax.swing.JLabel();
        jButton_help = new javax.swing.JButton();

        jScrollBar1.setName("jScrollBar1"); // NOI18N

        setName("Form"); // NOI18N

        jPanel_controls.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel_controls.setName("jPanel_controls"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(tagrecognizerdesktop.TagRecognizer.class).getContext().getResourceMap(TagRecognitionView.class);
        jButton_calibrate.setIcon(resourceMap.getIcon("jButton_calibrate.icon")); // NOI18N
        jButton_calibrate.setText(resourceMap.getString("jButton_calibrate.text")); // NOI18N
        jButton_calibrate.setName("jButton_calibrate"); // NOI18N
        jButton_calibrate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_calibrateActionPerformed(evt);
            }
        });

        jButton_start.setIcon(resourceMap.getIcon("jButton_start.icon")); // NOI18N
        jButton_start.setText(resourceMap.getString("jButton_start.text")); // NOI18N
        jButton_start.setName("jButton_start"); // NOI18N
        jButton_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_startActionPerformed(evt);
            }
        });

        jButton_stop.setIcon(resourceMap.getIcon("jButton_stop.icon")); // NOI18N
        jButton_stop.setText(resourceMap.getString("jButton_stop.text")); // NOI18N
        jButton_stop.setName("jButton_stop"); // NOI18N
        jButton_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_stopActionPerformed(evt);
            }
        });

        jButton_receiveImage.setIcon(resourceMap.getIcon("jButton_receiveImage.icon")); // NOI18N
        jButton_receiveImage.setText(resourceMap.getString("jButton_receiveImage.text")); // NOI18N
        jButton_receiveImage.setName("jButton_receiveImage"); // NOI18N
        jButton_receiveImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_receiveImageActionPerformed(evt);
            }
        });

        jLabel_androidControls.setFont(resourceMap.getFont("jLabel_androidControls.font")); // NOI18N
        jLabel_androidControls.setIcon(resourceMap.getIcon("jLabel_androidControls.icon")); // NOI18N
        jLabel_androidControls.setLabelFor(jPanel_controls);
        jLabel_androidControls.setText(resourceMap.getString("jLabel_androidControls.text")); // NOI18N
        jLabel_androidControls.setName("jLabel_androidControls"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel_controlsLayout = new org.jdesktop.layout.GroupLayout(jPanel_controls);
        jPanel_controls.setLayout(jPanel_controlsLayout);
        jPanel_controlsLayout.setHorizontalGroup(
            jPanel_controlsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_controlsLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel_controlsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton_stop, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                    .add(jButton_start, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                    .add(jButton_calibrate, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                    .add(jButton_receiveImage, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                    .add(jLabel_androidControls, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel_controlsLayout.setVerticalGroup(
            jPanel_controlsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_controlsLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel_androidControls)
                .add(18, 18, 18)
                .add(jButton_receiveImage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton_calibrate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton_start, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton_stop, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18))
        );

        jButton_receiveImage.getAccessibleContext().setAccessibleName(resourceMap.getString("jButton1.AccessibleContext.accessibleName")); // NOI18N

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jLabel_image.setText(resourceMap.getString("jLabel_image.text")); // NOI18N
        jLabel_image.setName("jLabel_image"); // NOI18N
        jTabbedPane1.addTab(resourceMap.getString("jLabel_image.TabConstraints.tabTitle"), jLabel_image); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jLabel_log.setText(resourceMap.getString("jLabel_log.text")); // NOI18N
        jLabel_log.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel_log.setName("jLabel_log"); // NOI18N
        jScrollPane1.setViewportView(jLabel_log);

        jTabbedPane1.addTab(resourceMap.getString("jScrollPane1.TabConstraints.tabTitle"), jScrollPane1); // NOI18N

        jButton_help.setIcon(resourceMap.getIcon("jButton_help.icon")); // NOI18N
        jButton_help.setText(resourceMap.getString("jButton_help.text")); // NOI18N
        jButton_help.setName("jButton_help"); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton_help)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 707, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel_controls, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel_controls, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 278, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 503, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton_help, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void initialStateButtons () {
        jButton_receiveImage.setEnabled(true);
        jButton_start.setEnabled(true);
        jButton_stop.setEnabled(false);
        jButton_calibrate.setEnabled(true);
    }
    
    public void closeApp() {
        if (_server != null ) {
            _server.closeServer();
            _server = null;
        }
    }
    
    private void jButton_calibrateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_calibrateActionPerformed
	jButton_receiveImage.setEnabled(false);
        jButton_start.setEnabled(false);
        jButton_stop.setEnabled(false);
        jButton_calibrate.setEnabled(false);
        sendCMD(Message.CALIBRATE);
        
    }//GEN-LAST:event_jButton_calibrateActionPerformed

    private void jButton_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_startActionPerformed
        jButton_receiveImage.setEnabled(false);
        jButton_start.setEnabled(false);
        jButton_stop.setEnabled(true);
        jButton_calibrate.setEnabled(false);
        sendCMD(Message.START_SEARCH);
    }//GEN-LAST:event_jButton_startActionPerformed

    private void jButton_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_stopActionPerformed
        initialStateButtons();
        sendCMD(Message.STOP_SEARCH);
    }//GEN-LAST:event_jButton_stopActionPerformed

    private void jButton_receiveImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_receiveImageActionPerformed
        jButton_receiveImage.setEnabled(false);
        jButton_start.setEnabled(false);
        jButton_stop.setEnabled(false);
        jButton_calibrate.setEnabled(false);
        sendCMD(Message.SEND_VIEW);
    }//GEN-LAST:event_jButton_receiveImageActionPerformed

    private void sendCMD(Message cmd) {
        CmdSender sender = new CmdSender(cmd);
        Thread sf = new Thread(sender);
        sf.start();
    }
    
    private String getStringColor ( Color c ) {
        String color = "";
        if ( c == Color.RED )
            color = "red";
        else if ( c == Color.BLUE )
            color = "blue";
        else if ( c == Color.YELLOW )
            color = "yellow";
        
        
        return color;
    }
    
    public synchronized void updateUI(ArrayList<Tag> tags) {
        if ( tags.size() > 0) {
            String info = new String();
            info += "<p>Received " + tags.size() + " tags at <b>" + 
                    new SimpleDateFormat("HH:mm:ss dd/MM/yyyy").
                    format(tags.get(0).getTime()) + "</b><br />";
            
            for ( Tag t : tags ){
                if ( _followedTags.containsKey(t.getCode())) {
                    info += "Position (" + "x=" + t.getX() + ",y=" + t.getY() + 
                        "). Code: <b><i><font color=\"" + 
                            getStringColor(((TagContainer)_followedTags.get(t.getCode())).getColor())
                            + "\">" + t.getCode() + "</font></i></b><br /><br />";
                }
                
            }
            info += "</p>";
            
            //Update UI
            this.updateUI(info);
            
            if (this._viewActive) {
                //Prepare image
                BufferedImage img = new BufferedImage(_image.getIconWidth(), _image.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
                Graphics2D g = img.createGraphics();
                g.drawImage(_image.getImage(), 0, 0, null);
                
                //Draw points
                for ( Tag t : tags ) {
                    if ( t.getX() != -1 && t.getY() != -1 && _followedTags.containsKey(t.getCode())) {
                        g.setColor(((TagContainer)_followedTags.get(t.getCode())).getColor());
                        g.fillOval(t.getX(), t.getY(), 20, 20);
                    }
                }
                
                g.dispose();
                _image = new ImageIcon(img);
                //Set icon
                Image scaled = _image.getImage().getScaledInstance(jLabel_image.getWidth(), jLabel_image.getHeight(), Image.SCALE_DEFAULT);
                jLabel_image.setIcon(new ImageIcon(scaled));
            }
        }
        
    }
    
    private void updateUI( String info ) {        
        String backup = jLabel_log.getText();
        backup = backup.replaceAll("<html>", "");
        backup = backup.replaceAll("</html>", "");
        jLabel_log.setText("<html>" + backup + info + "</html>");
    }
    
    public synchronized void updateUI (Message msg ) {
       
        if (msg == Message.CALIBRATION_FAIL || msg == Message.CALIBRATION_OK) {
            String s = new String();
            s += "\t*********************************************************\n";
            switch(msg){
                case CALIBRATION_OK:
                    s += "\t\tCalibration done.\n";
                    break;
                case CALIBRATION_FAIL:
                    s += "\t\tCalibration couldn't been done.\n";
                    break;
                default:
                    break;
            }
            s += "\t*********************************************************\n";
            
            updateUI(s);
        }
        
        //Update gui
        initialStateButtons();
                
    }
    
    public synchronized void updateUI ( byte[] imgData ) {
        //Cargamos la imagen
        _image = new ImageIcon(imgData);
        
        Image scaled = _image.getImage().getScaledInstance(jLabel_image.getWidth(), jLabel_image.getHeight(), Image.SCALE_DEFAULT);
        jLabel_image.setIcon(new ImageIcon(scaled));
        
        //Update gui
        _viewActive = true;
        jTabbedPane1.setEnabledAt(0, true);
        initialStateButtons();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_calibrate;
    private javax.swing.JButton jButton_help;
    private javax.swing.JButton jButton_receiveImage;
    private javax.swing.JButton jButton_start;
    private javax.swing.JButton jButton_stop;
    private javax.swing.JLabel jLabel_androidControls;
    private javax.swing.JLabel jLabel_image;
    private javax.swing.JLabel jLabel_log;
    private javax.swing.JPanel jPanel_controls;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
    
    private ServerThread _server = null;
    private boolean _viewActive;
    private ImageIcon _image;
    private HashMap _followedTags;

}
